{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "VPC + Auto Scaling + 2 EC2 Instances + Node.js Webserver",
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"EnableDnsSupport": true,
				"EnableDnsHostnames": true,
				"Tags": [
					{
						"Key": "Name",
						"Value": "MyVPC"
					}
				]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway"
		},
		"AttachInternetGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": "10.0.1.0/24",
				"MapPublicIpOnLaunch": true,
				"AvailabilityZone": {
					"Fn::Select": [
						0,
						{
							"Fn::GetAZs": ""
						}
					]
				}
			}
		},
		"RouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"Route": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachInternetGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "RouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"SubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"RouteTableId": {
					"Ref": "RouteTable"
				}
			}
		},
		"InstanceSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Allow SSH, HTTP and HTTPS",
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22,
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": 80,
						"ToPort": 80,
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": 443,
						"ToPort": 443,
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		},
		"LaunchTemplate": {
			"Type": "AWS::EC2::LaunchTemplate",
			"Properties": {
				"LaunchTemplateName": "WebServerLaunchTemplate",
				"LaunchTemplateData": {
					"InstanceType": "t2.micro",
					"KeyName": "portfolio-key-pair",
					"SecurityGroupIds": [
						{
							"Ref": "InstanceSecurityGroup"
						}
					],
					"ImageId": "ami-0779caf41f9ba54f0",
					"UserData": {
						"Fn::Base64": {
							"Fn::Sub": "#!/bin/bash\napt update && apt install -y curl gnupg ca-certificates\ncurl -fsSL https://deb.nodesource.com/setup_20.x | bash -\napt install -y nodejs\nmkdir -p /opt/hello-node\ncd /opt/hello-node\nnpm init -y\nmkdir node_modules\nnpm install express\ncat << 'EOF' > /opt/hello-node/server.js\nconst express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) => {res.send('Hallo vom Node.js-Server auf EC2!');\n});\napp.listen(port, () => {});\nEOF\nnode server.js &"
						}
					}
				}
			}
		},
		"AutoScalingGroup": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"VPCZoneIdentifier": [
					{
						"Ref": "PublicSubnet"
					}
				],
				"MinSize": "2",
				"MaxSize": "2",
				"DesiredCapacity": "2",
				"LaunchTemplate": {
					"LaunchTemplateId": {
						"Ref": "LaunchTemplate"
					},
					"Version": {
						"Fn::GetAtt": [
							"LaunchTemplate",
							"LatestVersionNumber"
						]
					}
				}
			}
		}
	},
	"Outputs": {
		"Hinweis": {
			"Description": "Die Instanzen haben keine feste IP. Bitte prüfen Sie unter EC2 → Instances.",
			"Value": "AutoScaling erstellt dynamisch 2 Instanzen – verwalten über EC2-Konsole."
		}
	}
}
