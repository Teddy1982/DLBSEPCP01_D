name: Deploy Debian Node.js Server via CloudFormation

on:
  push:
    branches: [ main ]  # Deployment bei Push auf main

permissions:
  id-token: write       # notwendig für OIDC (ohne AWS-Schlüssel)
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::081671634881:role/service-role/portfolio-iam
          aws-region: eu-central-1

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file portfolio.json \
            --stack-name portfolio \
            --parameter-overrides file://parameters.json \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Get latest Debian 12 AMI ID
        id: debianami
        run: |
          AMI_ID=$(aws ec2 describe-images \
            --owners 136693071363 \
            --filters "Name=name,Values=debian-12-amd64*" \
            --query 'Images[*].{ID:ImageId,Date:CreationDate}' \
            --output json | jq -r 'sort_by(.Date)[-1].ID')
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Deploy with latest AMI
        run: |
          aws cloudformation deploy \
            --template-file portfolio.json \
            --stack-name portfolio \
            --parameter-overrides \
              KeyName=portfolio-key-pair \
              DomainName=eduardtoews.com \
              EmailAddress=e.toews@freenet.de \
              HostedZoneId=Z05261601FCJ1U9LF0FKW \
              SSHAccessCidr=192.168.178.57/32 \
              ImageId=$AMI_ID \
            --capabilities CAPABILITY_NAMED_IAM
