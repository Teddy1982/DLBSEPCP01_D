{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC + EC2 + Node.js Webserver von GitHub",
  "Parameters": {
    "KeyName": {
      "Description": "EC2 Key Pair Name (ohne .pem)",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "GitRepoURL": {
      "Description": "Öffentliche GitHub-URL deines Node.js Projekts",
      "Type": "String"
    }
  },
  "Resources": {
    "MyVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [{ "Key": "Name", "Value": "MyVPC" }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": { "Fn::Select": [0, { "Fn::GetAZs": "" }] }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" }
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet" },
        "RouteTableId": { "Ref": "RouteTable" }
      }
    },
    "WebServerSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Webserver SG",
        "VpcId": { "Ref": "MyVPC" },
        "SecurityGroupIngress": [
          { "IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "0.0.0.0/0" },
          { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 80, "CidrIp": "0.0.0.0/0" }
        ]
      }
    },
    "WebServerInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "KeyName": { "Ref": "KeyName" },
        "ImageId": "ami-0c55b159cbfafe1f0",
        "SubnetId": { "Ref": "PublicSubnet" },
        "SecurityGroupIds": [ { "Ref": "WebServerSG" } ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": [
              "#!/bin/bash\nyum update -y\ncurl -sL https://rpm.nodesource.com/setup_18.x | bash -\nyum install -y nodejs git\ncd /home/ec2-user\ngit clone ${GitRepoURL} app\ncd app\nnpm install\nnohup node app.js > output.log 2>&1 &\n",
              {
                "GitRepoURL": { "Ref": "GitRepoURL" }
              }
            ]
          }
        },
        "Tags": [{ "Key": "Name", "Value": "NodeWebServer" }]
      }
    }
  },
  "Outputs": {
    "InstancePublicIP": {
      "Description": "Die öffentliche IP des Webservers",
      "Value": { "Fn::GetAtt": ["WebServerInstance", "PublicIp"] }
    },
    "WebAppURL": {
      "Description": "HTTP-Zugriff auf die Node.js App",
      "Value": {
        "Fn::Join": [
          "",
          [ "http://", { "Fn::GetAtt": ["WebServerInstance", "PublicDnsName"] }, ":80" ]
        ]
      }
    }
  }
}
